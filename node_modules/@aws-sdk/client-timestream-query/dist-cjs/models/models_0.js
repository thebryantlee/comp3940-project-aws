"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrepareQueryResponseFilterSensitiveLog = exports.QueryRequestFilterSensitiveLog = exports.PrepareQueryRequestFilterSensitiveLog = exports.ExecuteScheduledQueryRequestFilterSensitiveLog = exports.DescribeScheduledQueryResponseFilterSensitiveLog = exports.ScheduledQueryDescriptionFilterSensitiveLog = exports.CreateScheduledQueryRequestFilterSensitiveLog = exports.QueryExecutionException = exports.ScheduledQueryState = exports.ScheduledQueryRunStatus = exports.ResourceNotFoundException = exports.ServiceQuotaExceededException = exports.ScalarMeasureValueType = exports.MeasureValueType = exports.DimensionValueType = exports.S3EncryptionOption = exports.ConflictException = exports.ScalarType = exports.ValidationException = exports.ThrottlingException = exports.InvalidEndpointException = exports.InternalServerException = exports.AccessDeniedException = void 0;
const smithy_client_1 = require("@smithy/smithy-client");
const TimestreamQueryServiceException_1 = require("./TimestreamQueryServiceException");
class AccessDeniedException extends TimestreamQueryServiceException_1.TimestreamQueryServiceException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
exports.AccessDeniedException = AccessDeniedException;
class InternalServerException extends TimestreamQueryServiceException_1.TimestreamQueryServiceException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.Message = opts.Message;
    }
}
exports.InternalServerException = InternalServerException;
class InvalidEndpointException extends TimestreamQueryServiceException_1.TimestreamQueryServiceException {
    constructor(opts) {
        super({
            name: "InvalidEndpointException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidEndpointException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidEndpointException.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidEndpointException = InvalidEndpointException;
class ThrottlingException extends TimestreamQueryServiceException_1.TimestreamQueryServiceException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
exports.ThrottlingException = ThrottlingException;
class ValidationException extends TimestreamQueryServiceException_1.TimestreamQueryServiceException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.Message = opts.Message;
    }
}
exports.ValidationException = ValidationException;
exports.ScalarType = {
    BIGINT: "BIGINT",
    BOOLEAN: "BOOLEAN",
    DATE: "DATE",
    DOUBLE: "DOUBLE",
    INTEGER: "INTEGER",
    INTERVAL_DAY_TO_SECOND: "INTERVAL_DAY_TO_SECOND",
    INTERVAL_YEAR_TO_MONTH: "INTERVAL_YEAR_TO_MONTH",
    TIME: "TIME",
    TIMESTAMP: "TIMESTAMP",
    UNKNOWN: "UNKNOWN",
    VARCHAR: "VARCHAR",
};
class ConflictException extends TimestreamQueryServiceException_1.TimestreamQueryServiceException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.Message = opts.Message;
    }
}
exports.ConflictException = ConflictException;
exports.S3EncryptionOption = {
    SSE_KMS: "SSE_KMS",
    SSE_S3: "SSE_S3",
};
exports.DimensionValueType = {
    VARCHAR: "VARCHAR",
};
exports.MeasureValueType = {
    BIGINT: "BIGINT",
    BOOLEAN: "BOOLEAN",
    DOUBLE: "DOUBLE",
    MULTI: "MULTI",
    VARCHAR: "VARCHAR",
};
exports.ScalarMeasureValueType = {
    BIGINT: "BIGINT",
    BOOLEAN: "BOOLEAN",
    DOUBLE: "DOUBLE",
    TIMESTAMP: "TIMESTAMP",
    VARCHAR: "VARCHAR",
};
class ServiceQuotaExceededException extends TimestreamQueryServiceException_1.TimestreamQueryServiceException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.Message = opts.Message;
    }
}
exports.ServiceQuotaExceededException = ServiceQuotaExceededException;
class ResourceNotFoundException extends TimestreamQueryServiceException_1.TimestreamQueryServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
        this.ScheduledQueryArn = opts.ScheduledQueryArn;
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
exports.ScheduledQueryRunStatus = {
    AUTO_TRIGGER_FAILURE: "AUTO_TRIGGER_FAILURE",
    AUTO_TRIGGER_SUCCESS: "AUTO_TRIGGER_SUCCESS",
    MANUAL_TRIGGER_FAILURE: "MANUAL_TRIGGER_FAILURE",
    MANUAL_TRIGGER_SUCCESS: "MANUAL_TRIGGER_SUCCESS",
};
exports.ScheduledQueryState = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
class QueryExecutionException extends TimestreamQueryServiceException_1.TimestreamQueryServiceException {
    constructor(opts) {
        super({
            name: "QueryExecutionException",
            $fault: "client",
            ...opts,
        });
        this.name = "QueryExecutionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, QueryExecutionException.prototype);
        this.Message = opts.Message;
    }
}
exports.QueryExecutionException = QueryExecutionException;
const CreateScheduledQueryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryString && { QueryString: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ClientToken && { ClientToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.CreateScheduledQueryRequestFilterSensitiveLog = CreateScheduledQueryRequestFilterSensitiveLog;
const ScheduledQueryDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryString && { QueryString: smithy_client_1.SENSITIVE_STRING }),
});
exports.ScheduledQueryDescriptionFilterSensitiveLog = ScheduledQueryDescriptionFilterSensitiveLog;
const DescribeScheduledQueryResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ScheduledQuery && { ScheduledQuery: (0, exports.ScheduledQueryDescriptionFilterSensitiveLog)(obj.ScheduledQuery) }),
});
exports.DescribeScheduledQueryResponseFilterSensitiveLog = DescribeScheduledQueryResponseFilterSensitiveLog;
const ExecuteScheduledQueryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientToken && { ClientToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.ExecuteScheduledQueryRequestFilterSensitiveLog = ExecuteScheduledQueryRequestFilterSensitiveLog;
const PrepareQueryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryString && { QueryString: smithy_client_1.SENSITIVE_STRING }),
});
exports.PrepareQueryRequestFilterSensitiveLog = PrepareQueryRequestFilterSensitiveLog;
const QueryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryString && { QueryString: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ClientToken && { ClientToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.QueryRequestFilterSensitiveLog = QueryRequestFilterSensitiveLog;
const PrepareQueryResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryString && { QueryString: smithy_client_1.SENSITIVE_STRING }),
});
exports.PrepareQueryResponseFilterSensitiveLog = PrepareQueryResponseFilterSensitiveLog;
