import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { TimestreamQueryServiceException as __BaseException } from "./TimestreamQueryServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidEndpointException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidEndpointException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidEndpointException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidEndpointException.prototype);
        this.Message = opts.Message;
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.Message = opts.Message;
    }
}
export const ScalarType = {
    BIGINT: "BIGINT",
    BOOLEAN: "BOOLEAN",
    DATE: "DATE",
    DOUBLE: "DOUBLE",
    INTEGER: "INTEGER",
    INTERVAL_DAY_TO_SECOND: "INTERVAL_DAY_TO_SECOND",
    INTERVAL_YEAR_TO_MONTH: "INTERVAL_YEAR_TO_MONTH",
    TIME: "TIME",
    TIMESTAMP: "TIMESTAMP",
    UNKNOWN: "UNKNOWN",
    VARCHAR: "VARCHAR",
};
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.Message = opts.Message;
    }
}
export const S3EncryptionOption = {
    SSE_KMS: "SSE_KMS",
    SSE_S3: "SSE_S3",
};
export const DimensionValueType = {
    VARCHAR: "VARCHAR",
};
export const MeasureValueType = {
    BIGINT: "BIGINT",
    BOOLEAN: "BOOLEAN",
    DOUBLE: "DOUBLE",
    MULTI: "MULTI",
    VARCHAR: "VARCHAR",
};
export const ScalarMeasureValueType = {
    BIGINT: "BIGINT",
    BOOLEAN: "BOOLEAN",
    DOUBLE: "DOUBLE",
    TIMESTAMP: "TIMESTAMP",
    VARCHAR: "VARCHAR",
};
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
        this.ScheduledQueryArn = opts.ScheduledQueryArn;
    }
}
export const ScheduledQueryRunStatus = {
    AUTO_TRIGGER_FAILURE: "AUTO_TRIGGER_FAILURE",
    AUTO_TRIGGER_SUCCESS: "AUTO_TRIGGER_SUCCESS",
    MANUAL_TRIGGER_FAILURE: "MANUAL_TRIGGER_FAILURE",
    MANUAL_TRIGGER_SUCCESS: "MANUAL_TRIGGER_SUCCESS",
};
export const ScheduledQueryState = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export class QueryExecutionException extends __BaseException {
    constructor(opts) {
        super({
            name: "QueryExecutionException",
            $fault: "client",
            ...opts,
        });
        this.name = "QueryExecutionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, QueryExecutionException.prototype);
        this.Message = opts.Message;
    }
}
export const CreateScheduledQueryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryString && { QueryString: SENSITIVE_STRING }),
    ...(obj.ClientToken && { ClientToken: SENSITIVE_STRING }),
});
export const ScheduledQueryDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryString && { QueryString: SENSITIVE_STRING }),
});
export const DescribeScheduledQueryResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ScheduledQuery && { ScheduledQuery: ScheduledQueryDescriptionFilterSensitiveLog(obj.ScheduledQuery) }),
});
export const ExecuteScheduledQueryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientToken && { ClientToken: SENSITIVE_STRING }),
});
export const PrepareQueryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryString && { QueryString: SENSITIVE_STRING }),
});
export const QueryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryString && { QueryString: SENSITIVE_STRING }),
    ...(obj.ClientToken && { ClientToken: SENSITIVE_STRING }),
});
export const PrepareQueryResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryString && { QueryString: SENSITIVE_STRING }),
});
