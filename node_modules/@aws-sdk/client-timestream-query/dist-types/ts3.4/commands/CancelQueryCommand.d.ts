import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import { CancelQueryRequest, CancelQueryResponse } from "../models/models_0";
import {
  ServiceInputTypes,
  ServiceOutputTypes,
  TimestreamQueryClientResolvedConfig,
} from "../TimestreamQueryClient";
export { __MetadataBearer, $Command };
export interface CancelQueryCommandInput extends CancelQueryRequest {}
export interface CancelQueryCommandOutput
  extends CancelQueryResponse,
    __MetadataBearer {}
export declare class CancelQueryCommand extends $Command<
  CancelQueryCommandInput,
  CancelQueryCommandOutput,
  TimestreamQueryClientResolvedConfig
> {
  readonly input: CancelQueryCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CancelQueryCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: TimestreamQueryClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<CancelQueryCommandInput, CancelQueryCommandOutput>;
  private serialize;
  private deserialize;
}
